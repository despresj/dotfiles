<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
<plist version="1.0">
<dict>
	<key>bundleid</key>
	<string>com.hauselin.obsidian</string>
	<key>connections</key>
	<dict>
		<key>0F2ED3A2-F821-40B0-9915-C8E5E2D84A02</key>
		<array>
			<dict>
				<key>destinationuid</key>
				<string>67E25071-1FF8-4F8B-9A9F-2509093593B6</string>
				<key>modifiers</key>
				<integer>0</integer>
				<key>modifiersubtext</key>
				<string></string>
				<key>vitoclose</key>
				<false/>
			</dict>
		</array>
		<key>1BD03BB0-06B9-47F5-9346-7A829C38B248</key>
		<array>
			<dict>
				<key>destinationuid</key>
				<string>86967BF2-99A7-43FB-A22A-7AC2F9A8C34C</string>
				<key>modifiers</key>
				<integer>0</integer>
				<key>modifiersubtext</key>
				<string></string>
				<key>vitoclose</key>
				<false/>
			</dict>
		</array>
		<key>249B0782-BFFB-4382-A857-5058D7C3D244</key>
		<array>
			<dict>
				<key>destinationuid</key>
				<string>5ADBB309-EC74-453A-B7F5-9E34E2CDB7E3</string>
				<key>modifiers</key>
				<integer>0</integer>
				<key>modifiersubtext</key>
				<string></string>
				<key>vitoclose</key>
				<false/>
			</dict>
		</array>
		<key>29B3A4DB-80CD-498F-A079-18F1CA7DD20C</key>
		<array>
			<dict>
				<key>destinationuid</key>
				<string>0796CFDE-8B84-4EAD-A82D-6558AF6C4D42</string>
				<key>modifiers</key>
				<integer>0</integer>
				<key>modifiersubtext</key>
				<string></string>
				<key>vitoclose</key>
				<false/>
			</dict>
		</array>
		<key>2CC3DBA2-EDA4-4548-A215-611A436E43DB</key>
		<array>
			<dict>
				<key>destinationuid</key>
				<string>70AEEB77-35DB-44B9-B633-BE1D2B43D581</string>
				<key>modifiers</key>
				<integer>0</integer>
				<key>modifiersubtext</key>
				<string></string>
				<key>vitoclose</key>
				<false/>
			</dict>
		</array>
		<key>2EEFE48E-B0E2-406A-BCA9-930F5969A364</key>
		<array>
			<dict>
				<key>destinationuid</key>
				<string>8B221971-0089-4DAC-A056-EC2C961C6EAB</string>
				<key>modifiers</key>
				<integer>0</integer>
				<key>modifiersubtext</key>
				<string></string>
				<key>vitoclose</key>
				<false/>
			</dict>
		</array>
		<key>353B5FD9-BF6A-4635-9AA1-313E16E86B05</key>
		<array>
			<dict>
				<key>destinationuid</key>
				<string>08A7509B-BDA4-455E-A628-38ABF42C04D7</string>
				<key>modifiers</key>
				<integer>0</integer>
				<key>modifiersubtext</key>
				<string></string>
				<key>vitoclose</key>
				<false/>
			</dict>
			<dict>
				<key>destinationuid</key>
				<string>9F656256-DD01-4508-BF9F-CDB3168DB9B6</string>
				<key>modifiers</key>
				<integer>0</integer>
				<key>modifiersubtext</key>
				<string></string>
				<key>vitoclose</key>
				<false/>
			</dict>
		</array>
		<key>3BD1A5BF-C96B-4C33-B2A6-2EEB18C41B62</key>
		<array>
			<dict>
				<key>destinationuid</key>
				<string>3CF13837-2DBB-46AA-93B4-6CA9598A106E</string>
				<key>modifiers</key>
				<integer>0</integer>
				<key>modifiersubtext</key>
				<string></string>
				<key>vitoclose</key>
				<false/>
			</dict>
		</array>
		<key>3DF54CDE-9D13-4486-B7EC-7921A46C8AE2</key>
		<array>
			<dict>
				<key>destinationuid</key>
				<string>6FF78F6F-9167-45D0-B022-7BE55106848C</string>
				<key>modifiers</key>
				<integer>0</integer>
				<key>modifiersubtext</key>
				<string></string>
				<key>vitoclose</key>
				<false/>
			</dict>
		</array>
		<key>3F7FA866-52E3-46A9-84EE-80A4D3244647</key>
		<array>
			<dict>
				<key>destinationuid</key>
				<string>A70B656D-CA4C-41F9-99E3-988FB6158F5F</string>
				<key>modifiers</key>
				<integer>0</integer>
				<key>modifiersubtext</key>
				<string></string>
				<key>vitoclose</key>
				<false/>
			</dict>
		</array>
		<key>403F9FD9-33F0-42FC-8E20-FEC2C821B083</key>
		<array>
			<dict>
				<key>destinationuid</key>
				<string>249B0782-BFFB-4382-A857-5058D7C3D244</string>
				<key>modifiers</key>
				<integer>0</integer>
				<key>modifiersubtext</key>
				<string></string>
				<key>vitoclose</key>
				<false/>
			</dict>
		</array>
		<key>44D69DBA-085D-4208-86A1-CED1CA068AB3</key>
		<array>
			<dict>
				<key>destinationuid</key>
				<string>46732892-62E0-47CE-B727-EBA967105197</string>
				<key>modifiers</key>
				<integer>0</integer>
				<key>modifiersubtext</key>
				<string></string>
				<key>vitoclose</key>
				<false/>
			</dict>
		</array>
		<key>46732892-62E0-47CE-B727-EBA967105197</key>
		<array>
			<dict>
				<key>destinationuid</key>
				<string>2CC3DBA2-EDA4-4548-A215-611A436E43DB</string>
				<key>modifiers</key>
				<integer>0</integer>
				<key>modifiersubtext</key>
				<string></string>
				<key>vitoclose</key>
				<false/>
			</dict>
		</array>
		<key>54B8D923-3C08-4CD2-8F05-0AF628F5C029</key>
		<array>
			<dict>
				<key>destinationuid</key>
				<string>0796CFDE-8B84-4EAD-A82D-6558AF6C4D42</string>
				<key>modifiers</key>
				<integer>0</integer>
				<key>modifiersubtext</key>
				<string></string>
				<key>vitoclose</key>
				<false/>
			</dict>
		</array>
		<key>5ADBB309-EC74-453A-B7F5-9E34E2CDB7E3</key>
		<array>
			<dict>
				<key>destinationuid</key>
				<string>70AEEB77-35DB-44B9-B633-BE1D2B43D581</string>
				<key>modifiers</key>
				<integer>0</integer>
				<key>modifiersubtext</key>
				<string></string>
				<key>vitoclose</key>
				<false/>
			</dict>
		</array>
		<key>5DE0CED7-F7E2-4A3F-B3A2-53FF23C8C6D3</key>
		<array>
			<dict>
				<key>destinationuid</key>
				<string>D79944EC-E799-4CC4-9961-A6EBF5D6FBDC</string>
				<key>modifiers</key>
				<integer>0</integer>
				<key>modifiersubtext</key>
				<string></string>
				<key>vitoclose</key>
				<false/>
			</dict>
		</array>
		<key>6F34BFA1-14F5-49E9-B25D-417D71A29AD4</key>
		<array>
			<dict>
				<key>destinationuid</key>
				<string>DE762236-EFCC-45D3-85CA-A1B6B191762C</string>
				<key>modifiers</key>
				<integer>0</integer>
				<key>modifiersubtext</key>
				<string></string>
				<key>vitoclose</key>
				<false/>
			</dict>
		</array>
		<key>6FF78F6F-9167-45D0-B022-7BE55106848C</key>
		<array>
			<dict>
				<key>destinationuid</key>
				<string>C016E20E-3F44-4372-90DC-1B00DA8C07F8</string>
				<key>modifiers</key>
				<integer>0</integer>
				<key>modifiersubtext</key>
				<string></string>
				<key>vitoclose</key>
				<false/>
			</dict>
		</array>
		<key>76C3031F-7B85-45C6-9D05-DF5802BBC167</key>
		<array>
			<dict>
				<key>destinationuid</key>
				<string>3E2AE83C-BAFA-4EB9-ADCB-0BB7989CF9E9</string>
				<key>modifiers</key>
				<integer>0</integer>
				<key>modifiersubtext</key>
				<string></string>
				<key>vitoclose</key>
				<false/>
			</dict>
		</array>
		<key>834BB1A9-B643-4448-97B4-B6B6582602CB</key>
		<array>
			<dict>
				<key>destinationuid</key>
				<string>2754DF89-417E-46D0-A435-3ED58F2CB8CF</string>
				<key>modifiers</key>
				<integer>0</integer>
				<key>modifiersubtext</key>
				<string></string>
				<key>vitoclose</key>
				<false/>
			</dict>
		</array>
		<key>854EB1EE-9017-4F43-BC80-BAF317FC5315</key>
		<array>
			<dict>
				<key>destinationuid</key>
				<string>2EEFE48E-B0E2-406A-BCA9-930F5969A364</string>
				<key>modifiers</key>
				<integer>0</integer>
				<key>modifiersubtext</key>
				<string></string>
				<key>vitoclose</key>
				<false/>
			</dict>
		</array>
		<key>86967BF2-99A7-43FB-A22A-7AC2F9A8C34C</key>
		<array>
			<dict>
				<key>destinationuid</key>
				<string>CD6980A3-E50D-4689-B8D6-1A677CDE1914</string>
				<key>modifiers</key>
				<integer>0</integer>
				<key>modifiersubtext</key>
				<string></string>
				<key>vitoclose</key>
				<false/>
			</dict>
		</array>
		<key>8B221971-0089-4DAC-A056-EC2C961C6EAB</key>
		<array>
			<dict>
				<key>destinationuid</key>
				<string>3BD1A5BF-C96B-4C33-B2A6-2EEB18C41B62</string>
				<key>modifiers</key>
				<integer>0</integer>
				<key>modifiersubtext</key>
				<string></string>
				<key>vitoclose</key>
				<false/>
			</dict>
		</array>
		<key>8C017EEF-38DD-4148-9291-9302EFCE33DE</key>
		<array>
			<dict>
				<key>destinationuid</key>
				<string>72CFFBA4-02FC-4875-BB2C-562FCF5E43BC</string>
				<key>modifiers</key>
				<integer>0</integer>
				<key>modifiersubtext</key>
				<string></string>
				<key>vitoclose</key>
				<false/>
			</dict>
		</array>
		<key>9295060C-B513-4806-8F12-52EC6D30C9A3</key>
		<array>
			<dict>
				<key>destinationuid</key>
				<string>46732892-62E0-47CE-B727-EBA967105197</string>
				<key>modifiers</key>
				<integer>0</integer>
				<key>modifiersubtext</key>
				<string></string>
				<key>vitoclose</key>
				<false/>
			</dict>
		</array>
		<key>ADAB8847-A309-4A02-9D42-E8D30C47BC5D</key>
		<array>
			<dict>
				<key>destinationuid</key>
				<string>E6955BE2-FEB7-470D-92BE-03EDF6C498FB</string>
				<key>modifiers</key>
				<integer>0</integer>
				<key>modifiersubtext</key>
				<string></string>
				<key>vitoclose</key>
				<false/>
			</dict>
		</array>
		<key>B768A804-C61E-4133-AB9C-74C6448BFC62</key>
		<array>
			<dict>
				<key>destinationuid</key>
				<string>3E2AE83C-BAFA-4EB9-ADCB-0BB7989CF9E9</string>
				<key>modifiers</key>
				<integer>0</integer>
				<key>modifiersubtext</key>
				<string></string>
				<key>vitoclose</key>
				<false/>
			</dict>
		</array>
		<key>C016E20E-3F44-4372-90DC-1B00DA8C07F8</key>
		<array>
			<dict>
				<key>destinationuid</key>
				<string>70AEEB77-35DB-44B9-B633-BE1D2B43D581</string>
				<key>modifiers</key>
				<integer>0</integer>
				<key>modifiersubtext</key>
				<string></string>
				<key>vitoclose</key>
				<false/>
			</dict>
		</array>
		<key>CD6980A3-E50D-4689-B8D6-1A677CDE1914</key>
		<array>
			<dict>
				<key>destinationuid</key>
				<string>6F34BFA1-14F5-49E9-B25D-417D71A29AD4</string>
				<key>modifiers</key>
				<integer>0</integer>
				<key>modifiersubtext</key>
				<string></string>
				<key>vitoclose</key>
				<false/>
			</dict>
		</array>
		<key>CEC4065E-BADA-44B7-A255-4A9D613685E2</key>
		<array>
			<dict>
				<key>destinationuid</key>
				<string>249B0782-BFFB-4382-A857-5058D7C3D244</string>
				<key>modifiers</key>
				<integer>0</integer>
				<key>modifiersubtext</key>
				<string></string>
				<key>vitoclose</key>
				<false/>
			</dict>
		</array>
		<key>F118473C-D1EF-472F-A1F6-CC9A8C65ABF2</key>
		<array>
			<dict>
				<key>destinationuid</key>
				<string>360748C4-EF05-4FC2-8AB9-E4A969D2D256</string>
				<key>modifiers</key>
				<integer>0</integer>
				<key>modifiersubtext</key>
				<string></string>
				<key>vitoclose</key>
				<false/>
			</dict>
		</array>
		<key>F565051F-71D8-42F7-A733-5DA9F39AAEA2</key>
		<array>
			<dict>
				<key>destinationuid</key>
				<string>F8C5232B-3EDC-4388-851E-BFE6602C88D0</string>
				<key>modifiers</key>
				<integer>0</integer>
				<key>modifiersubtext</key>
				<string></string>
				<key>vitoclose</key>
				<false/>
			</dict>
		</array>
		<key>FFD4328D-FE08-4222-8AA1-FD71A1DC33F9</key>
		<array>
			<dict>
				<key>destinationuid</key>
				<string>6FF78F6F-9167-45D0-B022-7BE55106848C</string>
				<key>modifiers</key>
				<integer>0</integer>
				<key>modifiersubtext</key>
				<string></string>
				<key>vitoclose</key>
				<false/>
			</dict>
		</array>
	</dict>
	<key>createdby</key>
	<string>Hause Lin</string>
	<key>description</key>
	<string>A workflow to open Obsidian vaults, daily note, and search for notes in vaults.</string>
	<key>disabled</key>
	<true/>
	<key>name</key>
	<string>Obsidian</string>
	<key>objects</key>
	<array>
		<dict>
			<key>config</key>
			<dict>
				<key>argumenttype</key>
				<integer>2</integer>
				<key>keyword</key>
				<string>od</string>
				<key>subtext</key>
				<string></string>
				<key>text</key>
				<string>Open Obsidian Daily Note</string>
				<key>withspace</key>
				<false/>
			</dict>
			<key>type</key>
			<string>alfred.workflow.input.keyword</string>
			<key>uid</key>
			<string>B768A804-C61E-4133-AB9C-74C6448BFC62</string>
			<key>version</key>
			<integer>1</integer>
		</dict>
		<dict>
			<key>config</key>
			<dict>
				<key>browser</key>
				<string></string>
				<key>spaces</key>
				<string></string>
				<key>url</key>
				<string>https://forum.obsidian.md/</string>
				<key>utf8</key>
				<true/>
			</dict>
			<key>type</key>
			<string>alfred.workflow.action.openurl</string>
			<key>uid</key>
			<string>08A7509B-BDA4-455E-A628-38ABF42C04D7</string>
			<key>version</key>
			<integer>1</integer>
		</dict>
		<dict>
			<key>config</key>
			<dict>
				<key>argumenttype</key>
				<integer>0</integer>
				<key>keyword</key>
				<string>ov</string>
				<key>subtext</key>
				<string>Available vaults: obsidian help</string>
				<key>text</key>
				<string>Open Obsidian {query} Vault</string>
				<key>withspace</key>
				<true/>
			</dict>
			<key>type</key>
			<string>alfred.workflow.input.keyword</string>
			<key>uid</key>
			<string>29B3A4DB-80CD-498F-A079-18F1CA7DD20C</string>
			<key>version</key>
			<integer>1</integer>
		</dict>
		<dict>
			<key>config</key>
			<dict>
				<key>argumenttype</key>
				<integer>2</integer>
				<key>keyword</key>
				<string>o?</string>
				<key>subtext</key>
				<string>Open help and forum pages</string>
				<key>text</key>
				<string>Obsidian help</string>
				<key>withspace</key>
				<false/>
			</dict>
			<key>type</key>
			<string>alfred.workflow.input.keyword</string>
			<key>uid</key>
			<string>353B5FD9-BF6A-4635-9AA1-313E16E86B05</string>
			<key>version</key>
			<integer>1</integer>
		</dict>
		<dict>
			<key>config</key>
			<dict>
				<key>argumenttype</key>
				<integer>2</integer>
				<key>keyword</key>
				<string>otmr</string>
				<key>subtext</key>
				<string></string>
				<key>text</key>
				<string>Open tomorrow's Obsidian Daily Note</string>
				<key>withspace</key>
				<false/>
			</dict>
			<key>type</key>
			<string>alfred.workflow.input.keyword</string>
			<key>uid</key>
			<string>F118473C-D1EF-472F-A1F6-CC9A8C65ABF2</string>
			<key>version</key>
			<integer>1</integer>
		</dict>
		<dict>
			<key>config</key>
			<dict>
				<key>concurrently</key>
				<false/>
				<key>escaping</key>
				<integer>0</integer>
				<key>script</key>
				<string>ObjC.import('stdlib');
console.log('Running script')

// date format
date_format = $.getenv('dailyformat')
console.log(date_format)

// vault name
v = $.getenv('dailyvaultname');
console.log(v)

// specify the absolute/full path to the directory where you keep your daily notes
fulldir_daily = $.getenv('dailyabspath');
console.log(fulldir_daily)

// if you have a template for your daily note, specify the absolute/full path to this note
fullpath_template = $.getenv('dailytempabspath');
console.log(fullpath_template)



var months = [ "January", "February", "March", "April", "May", "June", "July", "August", "September", "October", "November", "December" ]
var months_short = [ "Jan", "Feb", "Mar", "Apr", "May", "Jun", "Jul", "Aug", "Sep", "Oct", "Nov", "Dec" ]








// don't need to edit the lines from here onwards
date_format = date_format.toLowerCase();

// determine no. of y, m, d needed
n_y = date_format.split('y').length - 1;
n_m = date_format.split('m').length - 1;
n_d = date_format.split('d').length - 1;
y_char = "y".repeat(n_y);
m_char = "m".repeat(n_m);
d_char = "d".repeat(n_d);

// get today's date
today = new Date()
// get tomorrrow'd ate
tomorrow = new Date(today)
tomorrow.setDate(tomorrow.getDate() + 1)
yyyy = tomorrow.getFullYear().toString();
mm = (tomorrow.getMonth() + 1).toString();
dd = tomorrow.getDate().toString();

// format date according to user specification (e.g., yy, m, d)
yyyy = yyyy.slice(4-n_y, 4);
if (mm.length == 1) {mm = mm.padStart(2, '0').slice(2-n_m, 2)};
if (dd.length == 1) {dd = dd.padStart(2, '0').slice(2-n_d, 2)};

date_format = date_format.replace(y_char, yyyy);
date_format = date_format.replace(m_char, mm);
date_format = date_format.replace(d_char, dd);

// convert to MMM or MMMM
if (m_char == 'mmmm') {
    date_format = date_format.replace(mm, months[Number(mm)-1])
}
if (m_char == 'mmm') {
    date_format = date_format.replace(mm, months_short[Number(mm)-1])
}
console.log('date_format: ' + date_format)

p = encodeURIComponent(v) + "&amp;file=" + date_format + ".md";
uri = "obsidian://open?vault=" + p;

// get the current app to access the standard additions
app = Application.currentApplication();
app.includeStandardAdditions = true;

// create new daily note if it doesn't exist
if (fulldir_daily != "") {
	// format file path
	if (fulldir_daily[(fulldir_daily.length-1)] != "/") {fulldir_daily += "/"}
	filepath = fulldir_daily + date_format + ".md"

	// get template content
	var template_txt = ""
	if (fullpath_template != "") {
		template_txt = app.read(Path(fullpath_template))
	}

	// create note with template (if exists)
	var path = Path(filepath)
	var finderApp = Application("Finder")
	if (!finderApp.exists(path)) {
		console.log("Note doesn't exist. Creating note.")
		var openedFile = app.openForAccess(path, {writePermission: true})
		app.write(template_txt, { to: openedFile, startingAt: app.getEof(openedFile) })
		app.closeAccess(openedFile)
		uri = "obsidian://open?path=" + encodeURIComponent(filepath)
		// wait a bit for note to show up in file system
		delay(1)
	}
} 


if (v == "" | date_format == "2111") {
	app.displayDialog("Set up the workflow first")
} else {
    // open file in vault
    app.openLocation(uri);
    console.log(uri);
}</string>
				<key>scriptargtype</key>
				<integer>0</integer>
				<key>scriptfile</key>
				<string></string>
				<key>type</key>
				<integer>7</integer>
			</dict>
			<key>type</key>
			<string>alfred.workflow.action.script</string>
			<key>uid</key>
			<string>360748C4-EF05-4FC2-8AB9-E4A969D2D256</string>
			<key>version</key>
			<integer>2</integer>
		</dict>
		<dict>
			<key>config</key>
			<dict>
				<key>concurrently</key>
				<false/>
				<key>escaping</key>
				<integer>0</integer>
				<key>script</key>
				<string>ObjC.import('stdlib');
console.log('Running script')

// date format
date_format = $.getenv('dailyformat')
console.log(date_format)

// vault name
v = $.getenv('dailyvaultname');
console.log(v)

// specify the absolute/full path to the directory where you keep your daily notes
fulldir_daily = $.getenv('dailyabspath');
console.log(fulldir_daily)

// if you have a template for your daily note, specify the absolute/full path to this note
fullpath_template = $.getenv('dailytempabspath');
console.log(fullpath_template)








var months = [ "January", "February", "March", "April", "May", "June", "July", "August", "September", "October", "November", "December" ]
var months_short = [ "Jan", "Feb", "Mar", "Apr", "May", "Jun", "Jul", "Aug", "Sep", "Oct", "Nov", "Dec" ]






// don't need to edit the lines from here onwards
date_format = date_format.toLowerCase();

// determine no. of y, m, d needed
n_y = date_format.split('y').length - 1;
n_m = date_format.split('m').length - 1;
n_d = date_format.split('d').length - 1;
y_char = "y".repeat(n_y);
m_char = "m".repeat(n_m);
d_char = "d".repeat(n_d);

// get today's date
today = new Date();
yyyy = today.getFullYear().toString();
mm = (today.getMonth() + 1).toString();
dd = today.getDate().toString();

// format date according to user specification (e.g., yy, m, d)
yyyy = yyyy.slice(4-n_y, 4);
if (mm.length == 1) {mm = mm.padStart(2, '0').slice(2-n_m, 2)};
if (dd.length == 1) {dd = dd.padStart(2, '0').slice(2-n_d, 2)};

date_format = date_format.replace(y_char, yyyy);
date_format = date_format.replace(m_char, mm);
date_format = date_format.replace(d_char, dd);

// convert to MMM or MMMM
if (m_char == 'mmmm') {
    date_format = date_format.replace(mm, months[Number(mm)-1])
}
if (m_char == 'mmm') {
    date_format = date_format.replace(mm, months_short[Number(mm)-1])
}
console.log('date_format: ' + date_format)

p = encodeURIComponent(v) + "&amp;file=" + date_format + ".md";
uri = "obsidian://open?vault=" + p;

// get the current app to access the standard additions
app = Application.currentApplication();
app.includeStandardAdditions = true;

// create new daily note if it doesn't exist
if (fulldir_daily != "") {
	// format file path
	if (fulldir_daily[(fulldir_daily.length-1)] != "/") {fulldir_daily += "/"}
	filepath = fulldir_daily + date_format + ".md"

	// get template content
	var template_txt = ""
	if (fullpath_template != "") {
		template_txt = app.read(Path(fullpath_template))
	}

	// create note with template (if exists)
	var path = Path(filepath)
	var finderApp = Application("Finder")
	if (!finderApp.exists(path)) {
		console.log("Note doesn't exist. Creating note.")
		var openedFile = app.openForAccess(path, {writePermission: true})
		app.write(template_txt, { to: openedFile, startingAt: app.getEof(openedFile) })
		app.closeAccess(openedFile)
		uri = "obsidian://open?path=" + encodeURIComponent(filepath)
		// wait a bit for note to show up in file system
		delay(1)
	}
} 


if (v == "" | date_format == "2111") {
	app.displayDialog("Set up the workflow first")
} else {
    // open file in vault
    app.openLocation(uri);
    console.log(uri);
}


// save today note path
Application('com.runningwithcrayons.Alfred').setConfiguration("dailytodaypath", {
    toValue: filepath,
    exportable: false,
    inWorkflow: $.getenv('alfred_workflow_bundleid'),
});</string>
				<key>scriptargtype</key>
				<integer>0</integer>
				<key>scriptfile</key>
				<string></string>
				<key>type</key>
				<integer>7</integer>
			</dict>
			<key>type</key>
			<string>alfred.workflow.action.script</string>
			<key>uid</key>
			<string>3E2AE83C-BAFA-4EB9-ADCB-0BB7989CF9E9</string>
			<key>version</key>
			<integer>2</integer>
		</dict>
		<dict>
			<key>config</key>
			<dict>
				<key>concurrently</key>
				<false/>
				<key>escaping</key>
				<integer>0</integer>
				<key>script</key>
				<string>// NOTE electron bug (if app isn't already opened, it will always open the last opened vault.
// https://discordapp.com/channels/686053708261228577/716028884885307432/755203478413902036

console.log('Running script')

// get vault name
v="{query}";

// construct uri
uri = "obsidian://open?vault=" + encodeURIComponent(v);

// get the current app to access the standard additions
app = Application.currentApplication();
app.includeStandardAdditions = true;

// open
app.openLocation(uri);
console.log(uri);</string>
				<key>scriptargtype</key>
				<integer>0</integer>
				<key>scriptfile</key>
				<string></string>
				<key>type</key>
				<integer>7</integer>
			</dict>
			<key>type</key>
			<string>alfred.workflow.action.script</string>
			<key>uid</key>
			<string>0796CFDE-8B84-4EAD-A82D-6558AF6C4D42</string>
			<key>version</key>
			<integer>2</integer>
		</dict>
		<dict>
			<key>config</key>
			<dict>
				<key>action</key>
				<integer>0</integer>
				<key>argument</key>
				<integer>0</integer>
				<key>focusedappvariable</key>
				<false/>
				<key>focusedappvariablename</key>
				<string></string>
				<key>hotkey</key>
				<integer>0</integer>
				<key>hotmod</key>
				<integer>0</integer>
				<key>leftcursor</key>
				<false/>
				<key>modsmode</key>
				<integer>0</integer>
				<key>relatedAppsMode</key>
				<integer>0</integer>
			</dict>
			<key>type</key>
			<string>alfred.workflow.trigger.hotkey</string>
			<key>uid</key>
			<string>76C3031F-7B85-45C6-9D05-DF5802BBC167</string>
			<key>version</key>
			<integer>2</integer>
		</dict>
		<dict>
			<key>config</key>
			<dict>
				<key>browser</key>
				<string></string>
				<key>spaces</key>
				<string></string>
				<key>url</key>
				<string>https://publish.obsidian.md/help/Index</string>
				<key>utf8</key>
				<true/>
			</dict>
			<key>type</key>
			<string>alfred.workflow.action.openurl</string>
			<key>uid</key>
			<string>9F656256-DD01-4508-BF9F-CDB3168DB9B6</string>
			<key>version</key>
			<integer>1</integer>
		</dict>
		<dict>
			<key>config</key>
			<dict>
				<key>alfredfiltersresults</key>
				<true/>
				<key>alfredfiltersresultsmatchmode</key>
				<integer>0</integer>
				<key>argumenttreatemptyqueryasnil</key>
				<true/>
				<key>argumenttrimmode</key>
				<integer>0</integer>
				<key>argumenttype</key>
				<integer>0</integer>
				<key>escaping</key>
				<integer>68</integer>
				<key>keyword</key>
				<string>oo</string>
				<key>queuedelaycustom</key>
				<integer>3</integer>
				<key>queuedelayimmediatelyinitially</key>
				<true/>
				<key>queuedelaymode</key>
				<integer>0</integer>
				<key>queuemode</key>
				<integer>1</integer>
				<key>runningsubtext</key>
				<string></string>
				<key>script</key>
				<string>ObjC.import('stdlib');
console.log('Running script')

// get all vaults
var vaults = []
var vaultpaths = []  // keep track of vaultpaths to prevent duplicating
try {
    for (i = 1; i &lt; 100; i++) {
        var vidx = 'vault' + i.toString()
        var vpath = $.getenv(vidx)
        var vname = $.getenv(vidx + 'name')
	    if (vname == "") {
            throw "catch"
        }
	    if (!vaultpaths.includes(vpath)) {  // include/list vault only if it doesn't exist yet
            vaults.push({title: vname, arg: vname, subtitle: vpath, uid: vpath})
            vaultpaths.push(vpath)
        }
    } 
} catch {
	console.log('Found ' + (i-1).toString() + ' vaults')
}

// list vaults 
JSON.stringify({items: vaults})</string>
				<key>scriptargtype</key>
				<integer>1</integer>
				<key>scriptfile</key>
				<string></string>
				<key>subtext</key>
				<string>Type something to autcomplete or space to list vaults</string>
				<key>title</key>
				<string>Which vault to open?</string>
				<key>type</key>
				<integer>7</integer>
				<key>withspace</key>
				<false/>
			</dict>
			<key>type</key>
			<string>alfred.workflow.input.scriptfilter</string>
			<key>uid</key>
			<string>54B8D923-3C08-4CD2-8F05-0AF628F5C029</string>
			<key>version</key>
			<integer>3</integer>
		</dict>
		<dict>
			<key>config</key>
			<dict>
				<key>argumenttype</key>
				<integer>1</integer>
				<key>subtext</key>
				<string>{query}.md (default: {var:fname_default})</string>
				<key>text</key>
				<string>New note title?</string>
				<key>withspace</key>
				<true/>
			</dict>
			<key>type</key>
			<string>alfred.workflow.input.keyword</string>
			<key>uid</key>
			<string>8B221971-0089-4DAC-A056-EC2C961C6EAB</string>
			<key>version</key>
			<integer>1</integer>
		</dict>
		<dict>
			<key>config</key>
			<dict>
				<key>concurrently</key>
				<false/>
				<key>escaping</key>
				<integer>0</integer>
				<key>script</key>
				<string>ObjC.import('stdlib');
console.log('Running script')

var v = $.getenv('vault');
var fname = $.getenv('fname');

if (fname == "") {  // use default title
    fname = $.getenv('fname_default')
}

console.log(v)
console.log(fname)

// get vault path
for (i = 2; i &lt; 1000; i++) {
    var vidx = 'vault' + i.toString() + 'name'
    var temp = $.getenv(vidx)  // throws error if variable doesn't exist
    console.log(temp)
    if (temp == v) {
        var vpath = $.getenv('vault' + i.toString())
        console.log(vpath)
        break
    }
}
var filepath = vpath + "/" + fname + ".md";
console.log(filepath)

// get the current app to access the standard additions
app = Application.currentApplication();
app.includeStandardAdditions = true;

// create file
var path = Path(filepath)
var finderApp = Application("Finder")
if (!finderApp.exists(path)) {
    console.log("Note doesn't exist. Creating note.")
    var openedFile = app.openForAccess(path, {writePermission: true})
    app.write("", { to: openedFile, startingAt: app.getEof(openedFile) })
    app.closeAccess(openedFile)
    delay(1)
}

// open file
// construct uri
uri = "obsidian://open?vault=" + encodeURIComponent(v) + "&amp;file=" + encodeURIComponent(fname);

// open file in vault
app.openLocation(uri);
console.log(uri);</string>
				<key>scriptargtype</key>
				<integer>0</integer>
				<key>scriptfile</key>
				<string></string>
				<key>type</key>
				<integer>7</integer>
			</dict>
			<key>type</key>
			<string>alfred.workflow.action.script</string>
			<key>uid</key>
			<string>3CF13837-2DBB-46AA-93B4-6CA9598A106E</string>
			<key>version</key>
			<integer>2</integer>
		</dict>
		<dict>
			<key>config</key>
			<dict>
				<key>alfredfiltersresults</key>
				<true/>
				<key>alfredfiltersresultsmatchmode</key>
				<integer>0</integer>
				<key>argumenttreatemptyqueryasnil</key>
				<true/>
				<key>argumenttrimmode</key>
				<integer>0</integer>
				<key>argumenttype</key>
				<integer>0</integer>
				<key>escaping</key>
				<integer>68</integer>
				<key>keyword</key>
				<string>on</string>
				<key>queuedelaycustom</key>
				<integer>3</integer>
				<key>queuedelayimmediatelyinitially</key>
				<true/>
				<key>queuedelaymode</key>
				<integer>0</integer>
				<key>queuemode</key>
				<integer>1</integer>
				<key>runningsubtext</key>
				<string></string>
				<key>script</key>
				<string>ObjC.import('stdlib');
console.log('Running script')

// get all vaults
var vaults = []
var vaultpaths = []  // keep track of vaultpaths to prevent duplicating
try {
    for (i = 2; i &lt; 100; i++) {
        var vidx = 'vault' + i.toString()
        var vpath = $.getenv(vidx)
        var vname = $.getenv(vidx + 'name')
	    if (vname == "") {
            throw "catch"
        }
	    if (!vaultpaths.includes(vpath)) {  // include/list vault only if it doesn't exist yet
            vaults.push({title: vname, arg: vname, subtitle: vpath, uid: vpath})
            vaultpaths.push(vpath)
        }
    } 
} catch {
	console.log('Found ' + (i-1).toString() + ' vaults')
}

// list vaults 
JSON.stringify({items: vaults})</string>
				<key>scriptargtype</key>
				<integer>1</integer>
				<key>scriptfile</key>
				<string></string>
				<key>subtext</key>
				<string>Type something to autcomplete or space to list vaults</string>
				<key>title</key>
				<string>Create new note in a vault</string>
				<key>type</key>
				<integer>7</integer>
				<key>withspace</key>
				<false/>
			</dict>
			<key>type</key>
			<string>alfred.workflow.input.scriptfilter</string>
			<key>uid</key>
			<string>854EB1EE-9017-4F43-BC80-BAF317FC5315</string>
			<key>version</key>
			<integer>3</integer>
		</dict>
		<dict>
			<key>config</key>
			<dict>
				<key>concurrently</key>
				<false/>
				<key>escaping</key>
				<integer>68</integer>
				<key>script</key>
				<string>ObjC.import('stdlib');
console.log('Running script')

var v = $.getenv('vault');
var fname = $.getenv('fname');

// construct uri
uri = "obsidian://search?vault=" + encodeURIComponent(v) + "&amp;query=" + encodeURIComponent(fname);

// get the current app to access the standard additions
app = Application.currentApplication();
app.includeStandardAdditions = true;

// search in vault
app.openLocation(uri);
console.log(uri);</string>
				<key>scriptargtype</key>
				<integer>0</integer>
				<key>scriptfile</key>
				<string></string>
				<key>type</key>
				<integer>7</integer>
			</dict>
			<key>type</key>
			<string>alfred.workflow.action.script</string>
			<key>uid</key>
			<string>DE762236-EFCC-45D3-85CA-A1B6B191762C</string>
			<key>version</key>
			<integer>2</integer>
		</dict>
		<dict>
			<key>config</key>
			<dict>
				<key>text</key>
				<string>Search Obsidian for {query}</string>
			</dict>
			<key>type</key>
			<string>alfred.workflow.trigger.fallback</string>
			<key>uid</key>
			<string>1BD03BB0-06B9-47F5-9346-7A829C38B248</string>
			<key>version</key>
			<integer>1</integer>
		</dict>
		<dict>
			<key>config</key>
			<dict>
				<key>alfredfiltersresults</key>
				<true/>
				<key>alfredfiltersresultsmatchmode</key>
				<integer>0</integer>
				<key>argumenttreatemptyqueryasnil</key>
				<true/>
				<key>argumenttrimmode</key>
				<integer>0</integer>
				<key>argumenttype</key>
				<integer>0</integer>
				<key>escaping</key>
				<integer>68</integer>
				<key>queuedelaycustom</key>
				<integer>3</integer>
				<key>queuedelayimmediatelyinitially</key>
				<true/>
				<key>queuedelaymode</key>
				<integer>0</integer>
				<key>queuemode</key>
				<integer>1</integer>
				<key>runningsubtext</key>
				<string></string>
				<key>script</key>
				<string>ObjC.import('stdlib');
console.log('Running script')

// get all vaults
var vaults = []
var vaultpaths = []  // keep track of vaultpaths to prevent duplicating
try {
    for (i = 2; i &lt; 100; i++) {
        var vidx = 'vault' + i.toString()
        var vpath = $.getenv(vidx)
        var vname = $.getenv(vidx + 'name')
	    if (vname == "") {
            throw "catch"
        }
	    if (!vaultpaths.includes(vpath)) {  // include/list vault only if it doesn't exist yet
            vaults.push({title: vname, arg: vname, subtitle: vpath, uid: vpath})
            vaultpaths.push(vpath)
        }
    } 
} catch {
	console.log('Found ' + (i-1).toString() + ' vaults')
}

// list vaults 
JSON.stringify({items: vaults})</string>
				<key>scriptargtype</key>
				<integer>1</integer>
				<key>scriptfile</key>
				<string></string>
				<key>subtext</key>
				<string>Type something to autcomplete or space to list vaults</string>
				<key>title</key>
				<string>Which vault to search in?</string>
				<key>type</key>
				<integer>7</integer>
				<key>withspace</key>
				<false/>
			</dict>
			<key>type</key>
			<string>alfred.workflow.input.scriptfilter</string>
			<key>uid</key>
			<string>CD6980A3-E50D-4689-B8D6-1A677CDE1914</string>
			<key>version</key>
			<integer>3</integer>
		</dict>
		<dict>
			<key>config</key>
			<dict>
				<key>argument</key>
				<string></string>
				<key>passthroughargument</key>
				<false/>
				<key>variables</key>
				<dict>
					<key>fname</key>
					<string>{query}</string>
				</dict>
			</dict>
			<key>type</key>
			<string>alfred.workflow.utility.argument</string>
			<key>uid</key>
			<string>3BD1A5BF-C96B-4C33-B2A6-2EEB18C41B62</string>
			<key>version</key>
			<integer>1</integer>
		</dict>
		<dict>
			<key>config</key>
			<dict>
				<key>argument</key>
				<string></string>
				<key>passthroughargument</key>
				<false/>
				<key>variables</key>
				<dict>
					<key>fname_default</key>
					<string>{date:yyyyMMdd_HHmmss}</string>
					<key>vault</key>
					<string>{query}</string>
				</dict>
			</dict>
			<key>type</key>
			<string>alfred.workflow.utility.argument</string>
			<key>uid</key>
			<string>2EEFE48E-B0E2-406A-BCA9-930F5969A364</string>
			<key>version</key>
			<integer>1</integer>
		</dict>
		<dict>
			<key>config</key>
			<dict>
				<key>argument</key>
				<string></string>
				<key>passthroughargument</key>
				<false/>
				<key>variables</key>
				<dict>
					<key>vault</key>
					<string>{query}</string>
				</dict>
			</dict>
			<key>type</key>
			<string>alfred.workflow.utility.argument</string>
			<key>uid</key>
			<string>6F34BFA1-14F5-49E9-B25D-417D71A29AD4</string>
			<key>version</key>
			<integer>1</integer>
		</dict>
		<dict>
			<key>config</key>
			<dict>
				<key>argument</key>
				<string></string>
				<key>passthroughargument</key>
				<false/>
				<key>variables</key>
				<dict>
					<key>fname</key>
					<string>{query}</string>
				</dict>
			</dict>
			<key>type</key>
			<string>alfred.workflow.utility.argument</string>
			<key>uid</key>
			<string>86967BF2-99A7-43FB-A22A-7AC2F9A8C34C</string>
			<key>version</key>
			<integer>1</integer>
		</dict>
		<dict>
			<key>config</key>
			<dict>
				<key>argumenttype</key>
				<integer>2</integer>
				<key>keyword</key>
				<string>oss</string>
				<key>subtext</key>
				<string>Press enter to continue</string>
				<key>text</key>
				<string>Search within vaults</string>
				<key>withspace</key>
				<false/>
			</dict>
			<key>type</key>
			<string>alfred.workflow.input.keyword</string>
			<key>uid</key>
			<string>44D69DBA-085D-4208-86A1-CED1CA068AB3</string>
			<key>version</key>
			<integer>1</integer>
		</dict>
		<dict>
			<key>config</key>
			<dict>
				<key>anchorfields</key>
				<true/>
				<key>argumenttrimmode</key>
				<integer>0</integer>
				<key>argumenttype</key>
				<integer>0</integer>
				<key>daterange</key>
				<integer>0</integer>
				<key>fields</key>
				<array>
					<dict>
						<key>field</key>
						<string>kMDItemDisplayName</string>
						<key>not</key>
						<false/>
						<key>split</key>
						<true/>
						<key>value</key>
						<string>{query}</string>
						<key>words</key>
						<true/>
					</dict>
					<dict>
						<key>field</key>
						<string>kMDItemFinderComment</string>
						<key>not</key>
						<false/>
						<key>split</key>
						<true/>
						<key>value</key>
						<string>{query}</string>
						<key>words</key>
						<true/>
					</dict>
					<dict>
						<key>field</key>
						<string>kMDItemTextContent</string>
						<key>not</key>
						<false/>
						<key>split</key>
						<true/>
						<key>value</key>
						<string>{query}</string>
						<key>words</key>
						<true/>
					</dict>
				</array>
				<key>includesystem</key>
				<false/>
				<key>keyword</key>
				<string>oaddvault</string>
				<key>limit</key>
				<integer>0</integer>
				<key>runningsubtext</key>
				<string></string>
				<key>scopes</key>
				<array/>
				<key>sortmode</key>
				<integer>0</integer>
				<key>subtext</key>
				<string>Type to search</string>
				<key>title</key>
				<string>Add an Obsidian vault</string>
				<key>types</key>
				<array>
					<string>public.folder</string>
				</array>
				<key>withspace</key>
				<true/>
			</dict>
			<key>type</key>
			<string>alfred.workflow.input.filefilter</string>
			<key>uid</key>
			<string>3F7FA866-52E3-46A9-84EE-80A4D3244647</string>
			<key>version</key>
			<integer>2</integer>
		</dict>
		<dict>
			<key>config</key>
			<dict>
				<key>concurrently</key>
				<false/>
				<key>escaping</key>
				<integer>68</integer>
				<key>script</key>
				<string>ObjC.import('stdlib');

console.log('Running script')

// get vault name from path
var path = '{query}'
var idx = path.lastIndexOf("/")
var vaultname = path.substring(idx+1)
var vaultpaths = []  // keep track of vaultpaths to prevent duplicating

try { // loop through existing vault variables
    for (i = 1; i &lt; 1000; i++) {
        var vidx = 'vault' + i.toString()
        var temp = $.getenv(vidx)  // throws error if variable doesn't exist
        if (temp == "") {  // throws error if variable exists but doesn't have value
            throw "catch"
        } else {
            vaultpaths.push(temp)
        }
    } 
} catch {  // create new variable if doesn't exist

	if (!vaultpaths.includes(path)) {  // add vault variable only vault hasn't been added
   	    // store vault path
        console.log('Assigned ' + vaultname + ' to ' + vidx)
        Application('com.runningwithcrayons.Alfred').setConfiguration(vidx, {
            toValue: path,
            exportable: false,
            inWorkflow: $.getenv('alfred_workflow_bundleid'),
        });

	    // store vault name
        Application('com.runningwithcrayons.Alfred').setConfiguration(vidx + "name", {
            toValue: vaultname,
            exportable: false,
            inWorkflow: $.getenv('alfred_workflow_bundleid'),
        });
    }

}</string>
				<key>scriptargtype</key>
				<integer>0</integer>
				<key>scriptfile</key>
				<string></string>
				<key>type</key>
				<integer>7</integer>
			</dict>
			<key>type</key>
			<string>alfred.workflow.action.script</string>
			<key>uid</key>
			<string>A70B656D-CA4C-41F9-99E3-988FB6158F5F</string>
			<key>version</key>
			<integer>2</integer>
		</dict>
		<dict>
			<key>config</key>
			<dict>
				<key>anchorfields</key>
				<true/>
				<key>argumenttrimmode</key>
				<integer>0</integer>
				<key>argumenttype</key>
				<integer>0</integer>
				<key>daterange</key>
				<integer>0</integer>
				<key>fields</key>
				<array>
					<dict>
						<key>field</key>
						<string>kMDItemDisplayName</string>
						<key>not</key>
						<false/>
						<key>split</key>
						<true/>
						<key>value</key>
						<string>{query}</string>
						<key>words</key>
						<true/>
					</dict>
					<dict>
						<key>field</key>
						<string>kMDItemFinderComment</string>
						<key>not</key>
						<false/>
						<key>split</key>
						<true/>
						<key>value</key>
						<string>{query}</string>
						<key>words</key>
						<true/>
					</dict>
					<dict>
						<key>field</key>
						<string>kMDItemTextContent</string>
						<key>not</key>
						<false/>
						<key>split</key>
						<true/>
						<key>value</key>
						<string>{query}</string>
						<key>words</key>
						<true/>
					</dict>
				</array>
				<key>includesystem</key>
				<false/>
				<key>keyword</key>
				<string>os</string>
				<key>limit</key>
				<integer>0</integer>
				<key>runningsubtext</key>
				<string></string>
				<key>scopes</key>
				<array/>
				<key>sortmode</key>
				<integer>0</integer>
				<key>subtext</key>
				<string>Search for {query}</string>
				<key>title</key>
				<string>Search markdown files</string>
				<key>types</key>
				<array>
					<string>net.daringfireball.markdown</string>
				</array>
				<key>withspace</key>
				<true/>
			</dict>
			<key>type</key>
			<string>alfred.workflow.input.filefilter</string>
			<key>uid</key>
			<string>2CC3DBA2-EDA4-4548-A215-611A436E43DB</string>
			<key>version</key>
			<integer>2</integer>
		</dict>
		<dict>
			<key>config</key>
			<dict>
				<key>concurrently</key>
				<false/>
				<key>escaping</key>
				<integer>68</integer>
				<key>script</key>
				<string>ObjC.import('stdlib');
console.log('Running script')

// get all vaults
var vaults = []
var vaultpaths = []  // keep track of vaultpaths to prevent duplicating
try {
    for (i = 2; i &lt; 100; i++) {
        var vidx = 'vault' + i.toString()
        var vpath = $.getenv(vidx)
        var vname = $.getenv(vidx + 'name')
	    if (vname == "") {
            throw "catch"
        }
	    if (!vaultpaths.includes(vpath)) {  // include/list vault only if it doesn't exist yet
            vaults.push({title: vname, arg: vname, subtitle: vpath, uid: vpath})
            vaultpaths.push(vpath)
        }
    } 
} catch {
	console.log('Found ' + (i-1).toString() + ' vaults')
}


// create json object to pass to next object
var jsonobj = {
  "alfredworkflow" : {
    "arg" : "{query}",
    "config" : {
      "scopes" : vaultpaths,
    }
  }
}

// pass to next object in workflow
JSON.stringify(jsonobj)</string>
				<key>scriptargtype</key>
				<integer>0</integer>
				<key>scriptfile</key>
				<string></string>
				<key>type</key>
				<integer>7</integer>
			</dict>
			<key>type</key>
			<string>alfred.workflow.action.script</string>
			<key>uid</key>
			<string>46732892-62E0-47CE-B727-EBA967105197</string>
			<key>version</key>
			<integer>2</integer>
		</dict>
		<dict>
			<key>config</key>
			<dict>
				<key>action</key>
				<integer>0</integer>
				<key>argument</key>
				<integer>0</integer>
				<key>focusedappvariable</key>
				<false/>
				<key>focusedappvariablename</key>
				<string></string>
				<key>hotkey</key>
				<integer>0</integer>
				<key>hotmod</key>
				<integer>0</integer>
				<key>leftcursor</key>
				<false/>
				<key>modsmode</key>
				<integer>0</integer>
				<key>relatedAppsMode</key>
				<integer>0</integer>
			</dict>
			<key>type</key>
			<string>alfred.workflow.trigger.hotkey</string>
			<key>uid</key>
			<string>9295060C-B513-4806-8F12-52EC6D30C9A3</string>
			<key>version</key>
			<integer>2</integer>
		</dict>
		<dict>
			<key>config</key>
			<dict>
				<key>concurrently</key>
				<false/>
				<key>escaping</key>
				<integer>68</integer>
				<key>script</key>
				<string>ObjC.import('stdlib');

console.log('Running script')

// get vault name from path
var path = '{query}'
var idx = path.lastIndexOf("/")
var vaultname = path.substring(idx+1)

Application('com.runningwithcrayons.Alfred').setConfiguration("dailyvault", {
    toValue: path,
    exportable: false,
    inWorkflow: $.getenv('alfred_workflow_bundleid'),
});

Application('com.runningwithcrayons.Alfred').setConfiguration("dailyvaultname", {
    toValue: vaultname,
    exportable: false,
    inWorkflow: $.getenv('alfred_workflow_bundleid'),
});</string>
				<key>scriptargtype</key>
				<integer>0</integer>
				<key>scriptfile</key>
				<string></string>
				<key>type</key>
				<integer>7</integer>
			</dict>
			<key>type</key>
			<string>alfred.workflow.action.script</string>
			<key>uid</key>
			<string>E6955BE2-FEB7-470D-92BE-03EDF6C498FB</string>
			<key>version</key>
			<integer>2</integer>
		</dict>
		<dict>
			<key>config</key>
			<dict>
				<key>anchorfields</key>
				<true/>
				<key>argumenttrimmode</key>
				<integer>0</integer>
				<key>argumenttype</key>
				<integer>0</integer>
				<key>daterange</key>
				<integer>0</integer>
				<key>fields</key>
				<array>
					<dict>
						<key>field</key>
						<string>kMDItemDisplayName</string>
						<key>not</key>
						<false/>
						<key>split</key>
						<true/>
						<key>value</key>
						<string>{query}</string>
						<key>words</key>
						<true/>
					</dict>
					<dict>
						<key>field</key>
						<string>kMDItemFinderComment</string>
						<key>not</key>
						<false/>
						<key>split</key>
						<true/>
						<key>value</key>
						<string>{query}</string>
						<key>words</key>
						<true/>
					</dict>
					<dict>
						<key>field</key>
						<string>kMDItemTextContent</string>
						<key>not</key>
						<false/>
						<key>split</key>
						<true/>
						<key>value</key>
						<string>{query}</string>
						<key>words</key>
						<true/>
					</dict>
				</array>
				<key>includesystem</key>
				<false/>
				<key>keyword</key>
				<string>odailyvault</string>
				<key>limit</key>
				<integer>0</integer>
				<key>runningsubtext</key>
				<string></string>
				<key>scopes</key>
				<array/>
				<key>sortmode</key>
				<integer>0</integer>
				<key>subtext</key>
				<string>Type to search (current: {var:dailyvaultname})</string>
				<key>title</key>
				<string>Specify daily note vault</string>
				<key>types</key>
				<array>
					<string>public.folder</string>
				</array>
				<key>withspace</key>
				<true/>
			</dict>
			<key>type</key>
			<string>alfred.workflow.input.filefilter</string>
			<key>uid</key>
			<string>ADAB8847-A309-4A02-9D42-E8D30C47BC5D</string>
			<key>version</key>
			<integer>2</integer>
		</dict>
		<dict>
			<key>config</key>
			<dict>
				<key>argumenttype</key>
				<integer>2</integer>
				<key>keyword</key>
				<string>orr</string>
				<key>subtext</key>
				<string>Press enter to continue</string>
				<key>text</key>
				<string>Search within vaults (modified last 3 days)</string>
				<key>withspace</key>
				<false/>
			</dict>
			<key>type</key>
			<string>alfred.workflow.input.keyword</string>
			<key>uid</key>
			<string>403F9FD9-33F0-42FC-8E20-FEC2C821B083</string>
			<key>version</key>
			<integer>1</integer>
		</dict>
		<dict>
			<key>config</key>
			<dict>
				<key>concurrently</key>
				<false/>
				<key>escaping</key>
				<integer>68</integer>
				<key>script</key>
				<string>ObjC.import('stdlib');

console.log('Running script')

Application('com.runningwithcrayons.Alfred').setConfiguration("dailyformat", {
    toValue: "{query}",
    exportable: false,
    inWorkflow: $.getenv('alfred_workflow_bundleid'),
});</string>
				<key>scriptargtype</key>
				<integer>0</integer>
				<key>scriptfile</key>
				<string></string>
				<key>type</key>
				<integer>7</integer>
			</dict>
			<key>type</key>
			<string>alfred.workflow.action.script</string>
			<key>uid</key>
			<string>D79944EC-E799-4CC4-9961-A6EBF5D6FBDC</string>
			<key>version</key>
			<integer>2</integer>
		</dict>
		<dict>
			<key>config</key>
			<dict>
				<key>argumenttype</key>
				<integer>0</integer>
				<key>keyword</key>
				<string>odailyformat</string>
				<key>subtext</key>
				<string>Examples: yyyy-mm-dd, mddyyyy, dd_MMM_yyyy (current: {var:dailyformat})</string>
				<key>text</key>
				<string>Specify daily note format: {query}</string>
				<key>withspace</key>
				<true/>
			</dict>
			<key>type</key>
			<string>alfred.workflow.input.keyword</string>
			<key>uid</key>
			<string>5DE0CED7-F7E2-4A3F-B3A2-53FF23C8C6D3</string>
			<key>version</key>
			<integer>1</integer>
		</dict>
		<dict>
			<key>config</key>
			<dict>
				<key>concurrently</key>
				<false/>
				<key>escaping</key>
				<integer>0</integer>
				<key>script</key>
				<string>ObjC.import('stdlib');
console.log('Running script')

// absolute file path to file
p="{query}";

// construct uri
uri = "obsidian://open?path=" + encodeURIComponent(p);

// get the current app to access the standard additions
app = Application.currentApplication();
app.includeStandardAdditions = true;

// open file in vault
// app.openLocation(uri);
console.log(p);




// check if file path contains vault names; if not, append "file://" to it to open in default app
// get all vaults
var vaultpaths = []  // keep track of vaultpaths to prevent duplicating
try {
    for (i = 2; i &lt; 100; i++) {
        var vidx = 'vault' + i.toString()
        var vpath = $.getenv(vidx)
        var vname = $.getenv(vidx + 'name')
	    if (vname == "") {
            throw "catch"
        }
	    if (!vaultpaths.includes(vpath)) {  // include/list vault only if it doesn't exist yet
            vaultpaths.push(vpath)
        }
    } 
} catch {
	console.log('Found ' + (i-1).toString() + ' vaults')
}

console.log(vaultpaths)

var invault = 0
for (i=0; i&lt;vaultpaths.length; i++) {
    if (p.indexOf(vaultpaths[i]) &gt;= 0) {
		invault = 1
	}
}

if (invault == 0) {
    uri = uri.replace("obsidian://open?path=", "file:///")
}

app.openLocation(uri);
console.log(uri);</string>
				<key>scriptargtype</key>
				<integer>0</integer>
				<key>scriptfile</key>
				<string></string>
				<key>type</key>
				<integer>7</integer>
			</dict>
			<key>type</key>
			<string>alfred.workflow.action.script</string>
			<key>uid</key>
			<string>70AEEB77-35DB-44B9-B633-BE1D2B43D581</string>
			<key>version</key>
			<integer>2</integer>
		</dict>
		<dict>
			<key>config</key>
			<dict>
				<key>anchorfields</key>
				<true/>
				<key>argumenttrimmode</key>
				<integer>0</integer>
				<key>argumenttype</key>
				<integer>0</integer>
				<key>daterange</key>
				<integer>2</integer>
				<key>fields</key>
				<array>
					<dict>
						<key>field</key>
						<string>kMDItemDisplayName</string>
						<key>not</key>
						<false/>
						<key>split</key>
						<true/>
						<key>value</key>
						<string>{query}</string>
						<key>words</key>
						<true/>
					</dict>
					<dict>
						<key>field</key>
						<string>kMDItemFinderComment</string>
						<key>not</key>
						<false/>
						<key>split</key>
						<true/>
						<key>value</key>
						<string>{query}</string>
						<key>words</key>
						<true/>
					</dict>
					<dict>
						<key>field</key>
						<string>kMDItemTextContent</string>
						<key>not</key>
						<false/>
						<key>split</key>
						<true/>
						<key>value</key>
						<string>{query}</string>
						<key>words</key>
						<true/>
					</dict>
				</array>
				<key>includesystem</key>
				<false/>
				<key>keyword</key>
				<string>or</string>
				<key>limit</key>
				<integer>0</integer>
				<key>runningsubtext</key>
				<string></string>
				<key>scopes</key>
				<array/>
				<key>sortmode</key>
				<integer>0</integer>
				<key>subtext</key>
				<string>Search for {query}</string>
				<key>title</key>
				<string>Search markdown files (modified last 3 days)</string>
				<key>types</key>
				<array>
					<string>net.daringfireball.markdown</string>
				</array>
				<key>withspace</key>
				<true/>
			</dict>
			<key>type</key>
			<string>alfred.workflow.input.filefilter</string>
			<key>uid</key>
			<string>5ADBB309-EC74-453A-B7F5-9E34E2CDB7E3</string>
			<key>version</key>
			<integer>2</integer>
		</dict>
		<dict>
			<key>config</key>
			<dict>
				<key>concurrently</key>
				<false/>
				<key>escaping</key>
				<integer>68</integer>
				<key>script</key>
				<string>ObjC.import('stdlib');
console.log('Running script')

// get all vaults
var vaults = []
var vaultpaths = []  // keep track of vaultpaths to prevent duplicating
try {
    for (i = 2; i &lt; 100; i++) {
        var vidx = 'vault' + i.toString()
        var vpath = $.getenv(vidx)
        var vname = $.getenv(vidx + 'name')
	    if (vname == "") {
            throw "catch"
        }
	    if (!vaultpaths.includes(vpath)) {  // include/list vault only if it doesn't exist yet
            vaults.push({title: vname, arg: vname, subtitle: vpath, uid: vpath})
            vaultpaths.push(vpath)
        }
    } 
} catch {
	console.log('Found ' + (i-1).toString() + ' vaults')
}


// create json object to pass to next object
var jsonobj = {
  "alfredworkflow" : {
    "arg" : "{query}",
    "config" : {
      "scopes" : vaultpaths,
    }
  }
}

// pass to next object in workflow
JSON.stringify(jsonobj)</string>
				<key>scriptargtype</key>
				<integer>0</integer>
				<key>scriptfile</key>
				<string></string>
				<key>type</key>
				<integer>7</integer>
			</dict>
			<key>type</key>
			<string>alfred.workflow.action.script</string>
			<key>uid</key>
			<string>249B0782-BFFB-4382-A857-5058D7C3D244</string>
			<key>version</key>
			<integer>2</integer>
		</dict>
		<dict>
			<key>config</key>
			<dict>
				<key>action</key>
				<integer>0</integer>
				<key>argument</key>
				<integer>0</integer>
				<key>focusedappvariable</key>
				<false/>
				<key>focusedappvariablename</key>
				<string></string>
				<key>hotkey</key>
				<integer>0</integer>
				<key>hotmod</key>
				<integer>0</integer>
				<key>leftcursor</key>
				<false/>
				<key>modsmode</key>
				<integer>0</integer>
				<key>relatedAppsMode</key>
				<integer>0</integer>
			</dict>
			<key>type</key>
			<string>alfred.workflow.trigger.hotkey</string>
			<key>uid</key>
			<string>CEC4065E-BADA-44B7-A255-4A9D613685E2</string>
			<key>version</key>
			<integer>2</integer>
		</dict>
		<dict>
			<key>config</key>
			<dict>
				<key>concurrently</key>
				<false/>
				<key>escaping</key>
				<integer>68</integer>
				<key>script</key>
				<string>ObjC.import('stdlib');

console.log('Running script')

Application('com.runningwithcrayons.Alfred').setConfiguration("dailytempabspath", {
    toValue: "{query}",
    exportable: false,
    inWorkflow: $.getenv('alfred_workflow_bundleid'),
});</string>
				<key>scriptargtype</key>
				<integer>0</integer>
				<key>scriptfile</key>
				<string></string>
				<key>type</key>
				<integer>7</integer>
			</dict>
			<key>type</key>
			<string>alfred.workflow.action.script</string>
			<key>uid</key>
			<string>F8C5232B-3EDC-4388-851E-BFE6602C88D0</string>
			<key>version</key>
			<integer>2</integer>
		</dict>
		<dict>
			<key>config</key>
			<dict>
				<key>anchorfields</key>
				<true/>
				<key>argumenttrimmode</key>
				<integer>0</integer>
				<key>argumenttype</key>
				<integer>0</integer>
				<key>daterange</key>
				<integer>0</integer>
				<key>fields</key>
				<array>
					<dict>
						<key>field</key>
						<string>kMDItemDisplayName</string>
						<key>not</key>
						<false/>
						<key>split</key>
						<true/>
						<key>value</key>
						<string>{query}</string>
						<key>words</key>
						<true/>
					</dict>
					<dict>
						<key>field</key>
						<string>kMDItemFinderComment</string>
						<key>not</key>
						<false/>
						<key>split</key>
						<true/>
						<key>value</key>
						<string>{query}</string>
						<key>words</key>
						<true/>
					</dict>
					<dict>
						<key>field</key>
						<string>kMDItemTextContent</string>
						<key>not</key>
						<false/>
						<key>split</key>
						<true/>
						<key>value</key>
						<string>{query}</string>
						<key>words</key>
						<true/>
					</dict>
				</array>
				<key>includesystem</key>
				<false/>
				<key>keyword</key>
				<string>odailytemplate</string>
				<key>limit</key>
				<integer>0</integer>
				<key>runningsubtext</key>
				<string></string>
				<key>scopes</key>
				<array/>
				<key>sortmode</key>
				<integer>0</integer>
				<key>subtext</key>
				<string>Type to search (current: {var:dailytempabspath})</string>
				<key>title</key>
				<string>Specify daily note template</string>
				<key>types</key>
				<array/>
				<key>withspace</key>
				<true/>
			</dict>
			<key>type</key>
			<string>alfred.workflow.input.filefilter</string>
			<key>uid</key>
			<string>F565051F-71D8-42F7-A733-5DA9F39AAEA2</string>
			<key>version</key>
			<integer>2</integer>
		</dict>
		<dict>
			<key>config</key>
			<dict>
				<key>argumenttype</key>
				<integer>2</integer>
				<key>keyword</key>
				<string>ott</string>
				<key>subtext</key>
				<string>Press enter to continue</string>
				<key>text</key>
				<string>Search within vaults (modified today)</string>
				<key>withspace</key>
				<false/>
			</dict>
			<key>type</key>
			<string>alfred.workflow.input.keyword</string>
			<key>uid</key>
			<string>FFD4328D-FE08-4222-8AA1-FD71A1DC33F9</string>
			<key>version</key>
			<integer>1</integer>
		</dict>
		<dict>
			<key>config</key>
			<dict>
				<key>anchorfields</key>
				<true/>
				<key>argumenttrimmode</key>
				<integer>0</integer>
				<key>argumenttype</key>
				<integer>0</integer>
				<key>daterange</key>
				<integer>0</integer>
				<key>fields</key>
				<array>
					<dict>
						<key>field</key>
						<string>kMDItemDisplayName</string>
						<key>not</key>
						<false/>
						<key>split</key>
						<true/>
						<key>value</key>
						<string>{query}</string>
						<key>words</key>
						<true/>
					</dict>
					<dict>
						<key>field</key>
						<string>kMDItemFinderComment</string>
						<key>not</key>
						<false/>
						<key>split</key>
						<true/>
						<key>value</key>
						<string>{query}</string>
						<key>words</key>
						<true/>
					</dict>
					<dict>
						<key>field</key>
						<string>kMDItemTextContent</string>
						<key>not</key>
						<false/>
						<key>split</key>
						<true/>
						<key>value</key>
						<string>{query}</string>
						<key>words</key>
						<true/>
					</dict>
				</array>
				<key>includesystem</key>
				<false/>
				<key>keyword</key>
				<string>odailypath</string>
				<key>limit</key>
				<integer>0</integer>
				<key>runningsubtext</key>
				<string></string>
				<key>scopes</key>
				<array/>
				<key>sortmode</key>
				<integer>0</integer>
				<key>subtext</key>
				<string>Type to search (current: {var:dailyabspath})</string>
				<key>title</key>
				<string>Specify daily note directory</string>
				<key>types</key>
				<array>
					<string>public.folder</string>
				</array>
				<key>withspace</key>
				<true/>
			</dict>
			<key>type</key>
			<string>alfred.workflow.input.filefilter</string>
			<key>uid</key>
			<string>8C017EEF-38DD-4148-9291-9302EFCE33DE</string>
			<key>version</key>
			<integer>2</integer>
		</dict>
		<dict>
			<key>config</key>
			<dict>
				<key>concurrently</key>
				<false/>
				<key>escaping</key>
				<integer>68</integer>
				<key>script</key>
				<string>ObjC.import('stdlib');

console.log('Running script')

Application('com.runningwithcrayons.Alfred').setConfiguration("dailyabspath", {
    toValue: "{query}",
    exportable: false,
    inWorkflow: $.getenv('alfred_workflow_bundleid'),
});</string>
				<key>scriptargtype</key>
				<integer>0</integer>
				<key>scriptfile</key>
				<string></string>
				<key>type</key>
				<integer>7</integer>
			</dict>
			<key>type</key>
			<string>alfred.workflow.action.script</string>
			<key>uid</key>
			<string>72CFFBA4-02FC-4875-BB2C-562FCF5E43BC</string>
			<key>version</key>
			<integer>2</integer>
		</dict>
		<dict>
			<key>config</key>
			<dict>
				<key>concurrently</key>
				<false/>
				<key>escaping</key>
				<integer>68</integer>
				<key>script</key>
				<string>ObjC.import('stdlib');
console.log('Running script')

// get all vaults
var vaults = []
var vaultpaths = []  // keep track of vaultpaths to prevent duplicating
try {
    for (i = 2; i &lt; 100; i++) {
        var vidx = 'vault' + i.toString()
        var vpath = $.getenv(vidx)
        var vname = $.getenv(vidx + 'name')
	    if (vname == "") {
            throw "catch"
        }
	    if (!vaultpaths.includes(vpath)) {  // include/list vault only if it doesn't exist yet
            vaults.push({title: vname, arg: vname, subtitle: vpath, uid: vpath})
            vaultpaths.push(vpath)
        }
    } 
} catch {
	console.log('Found ' + (i-1).toString() + ' vaults')
}


// create json object to pass to next object
var jsonobj = {
  "alfredworkflow" : {
    "arg" : "{query}",
    "config" : {
      "scopes" : vaultpaths,
    }
  }
}

// pass to next object in workflow
JSON.stringify(jsonobj)</string>
				<key>scriptargtype</key>
				<integer>0</integer>
				<key>scriptfile</key>
				<string></string>
				<key>type</key>
				<integer>7</integer>
			</dict>
			<key>type</key>
			<string>alfred.workflow.action.script</string>
			<key>uid</key>
			<string>6FF78F6F-9167-45D0-B022-7BE55106848C</string>
			<key>version</key>
			<integer>2</integer>
		</dict>
		<dict>
			<key>config</key>
			<dict>
				<key>anchorfields</key>
				<true/>
				<key>argumenttrimmode</key>
				<integer>0</integer>
				<key>argumenttype</key>
				<integer>0</integer>
				<key>daterange</key>
				<integer>1</integer>
				<key>fields</key>
				<array>
					<dict>
						<key>field</key>
						<string>kMDItemDisplayName</string>
						<key>not</key>
						<false/>
						<key>split</key>
						<true/>
						<key>value</key>
						<string>{query}</string>
						<key>words</key>
						<true/>
					</dict>
					<dict>
						<key>field</key>
						<string>kMDItemFinderComment</string>
						<key>not</key>
						<false/>
						<key>split</key>
						<true/>
						<key>value</key>
						<string>{query}</string>
						<key>words</key>
						<true/>
					</dict>
					<dict>
						<key>field</key>
						<string>kMDItemTextContent</string>
						<key>not</key>
						<false/>
						<key>split</key>
						<true/>
						<key>value</key>
						<string>{query}</string>
						<key>words</key>
						<true/>
					</dict>
				</array>
				<key>includesystem</key>
				<false/>
				<key>keyword</key>
				<string>ot</string>
				<key>limit</key>
				<integer>0</integer>
				<key>runningsubtext</key>
				<string></string>
				<key>scopes</key>
				<array/>
				<key>sortmode</key>
				<integer>0</integer>
				<key>subtext</key>
				<string>Search for {query}</string>
				<key>title</key>
				<string>Search markdown files (modified today)</string>
				<key>types</key>
				<array>
					<string>net.daringfireball.markdown</string>
				</array>
				<key>withspace</key>
				<true/>
			</dict>
			<key>type</key>
			<string>alfred.workflow.input.filefilter</string>
			<key>uid</key>
			<string>C016E20E-3F44-4372-90DC-1B00DA8C07F8</string>
			<key>version</key>
			<integer>2</integer>
		</dict>
		<dict>
			<key>config</key>
			<dict>
				<key>action</key>
				<integer>0</integer>
				<key>argument</key>
				<integer>0</integer>
				<key>focusedappvariable</key>
				<false/>
				<key>focusedappvariablename</key>
				<string></string>
				<key>hotkey</key>
				<integer>0</integer>
				<key>hotmod</key>
				<integer>0</integer>
				<key>leftcursor</key>
				<false/>
				<key>modsmode</key>
				<integer>0</integer>
				<key>relatedAppsMode</key>
				<integer>0</integer>
			</dict>
			<key>type</key>
			<string>alfred.workflow.trigger.hotkey</string>
			<key>uid</key>
			<string>3DF54CDE-9D13-4486-B7EC-7921A46C8AE2</string>
			<key>version</key>
			<integer>2</integer>
		</dict>
		<dict>
			<key>config</key>
			<dict>
				<key>concurrently</key>
				<false/>
				<key>escaping</key>
				<integer>68</integer>
				<key>script</key>
				<string>ObjC.import('stdlib');

console.log('Running script')

try { // loop through existing vault variables
    for (i = 2; i &lt; 100; i++) {
	    var vidx = 'vault' + i.toString()
        Application('com.runningwithcrayons.Alfred').removeConfiguration(vidx, {
            inWorkflow: $.getenv('alfred_workflow_bundleid'),
        });
        Application('com.runningwithcrayons.Alfred').removeConfiguration(vidx + 'name', {
            inWorkflow: $.getenv('alfred_workflow_bundleid'),
        });
    } 
} catch {  
    console.log("Removed " + (i-1).toString() + " variables");
}</string>
				<key>scriptargtype</key>
				<integer>0</integer>
				<key>scriptfile</key>
				<string></string>
				<key>type</key>
				<integer>7</integer>
			</dict>
			<key>type</key>
			<string>alfred.workflow.action.script</string>
			<key>uid</key>
			<string>2754DF89-417E-46D0-A435-3ED58F2CB8CF</string>
			<key>version</key>
			<integer>2</integer>
		</dict>
		<dict>
			<key>config</key>
			<dict>
				<key>argumenttype</key>
				<integer>2</integer>
				<key>keyword</key>
				<string>oclearvaults</string>
				<key>subtext</key>
				<string>Clears all but Obsidian help vault</string>
				<key>text</key>
				<string>Clear all vaults</string>
				<key>withspace</key>
				<false/>
			</dict>
			<key>type</key>
			<string>alfred.workflow.input.keyword</string>
			<key>uid</key>
			<string>834BB1A9-B643-4448-97B4-B6B6582602CB</string>
			<key>version</key>
			<integer>1</integer>
		</dict>
		<dict>
			<key>config</key>
			<dict>
				<key>concurrently</key>
				<false/>
				<key>escaping</key>
				<integer>68</integer>
				<key>script</key>
				<string>ObjC.import('stdlib');
console.log('Running script')

var remove_vault = '{query}';
console.log(remove_vault)

try { // loop through existing vault variables
    for (i = 2; i &lt; 100; i++) {
        var vidx = 'vault' + i.toString()
        vname = $.getenv(vidx + 'name')
        if (vname == remove_vault) {
            console.log("Found vault. Clearing it.")
            Application('com.runningwithcrayons.Alfred').removeConfiguration(vidx, {
                inWorkflow: $.getenv('alfred_workflow_bundleid'),
            });
            Application('com.runningwithcrayons.Alfred').removeConfiguration(vidx + 'name', {
                inWorkflow: $.getenv('alfred_workflow_bundleid'),
            });
            break
        }
    } 
} catch { 
    console.log("Vault not found.");
}</string>
				<key>scriptargtype</key>
				<integer>0</integer>
				<key>scriptfile</key>
				<string></string>
				<key>type</key>
				<integer>7</integer>
			</dict>
			<key>type</key>
			<string>alfred.workflow.action.script</string>
			<key>uid</key>
			<string>67E25071-1FF8-4F8B-9A9F-2509093593B6</string>
			<key>version</key>
			<integer>2</integer>
		</dict>
		<dict>
			<key>config</key>
			<dict>
				<key>alfredfiltersresults</key>
				<true/>
				<key>alfredfiltersresultsmatchmode</key>
				<integer>0</integer>
				<key>argumenttreatemptyqueryasnil</key>
				<true/>
				<key>argumenttrimmode</key>
				<integer>0</integer>
				<key>argumenttype</key>
				<integer>0</integer>
				<key>escaping</key>
				<integer>68</integer>
				<key>keyword</key>
				<string>oclearvault</string>
				<key>queuedelaycustom</key>
				<integer>3</integer>
				<key>queuedelayimmediatelyinitially</key>
				<true/>
				<key>queuedelaymode</key>
				<integer>0</integer>
				<key>queuemode</key>
				<integer>1</integer>
				<key>runningsubtext</key>
				<string></string>
				<key>script</key>
				<string>ObjC.import('stdlib');
console.log('Running script')

// get all vaults
var vaults = []
var vaultpaths = []  // keep track of vaultpaths to prevent duplicating
try {
    for (i = 2; i &lt; 100; i++) {
        var vidx = 'vault' + i.toString()
        var vpath = $.getenv(vidx)
        var vname = $.getenv(vidx + 'name')
	    if (vname == "") {
            throw "catch"
        }
	    if (!vaultpaths.includes(vpath)) {  // include/list vault only if it doesn't exist yet
            vaults.push({title: "Clear vault: " + vname, arg: vname, subtitle: vpath, uid: vpath})
            vaultpaths.push(vpath)
        }
    } 
} catch {
	console.log('Found ' + (i-1).toString() + ' vaults')
}

// list vaults 
JSON.stringify({items: vaults})</string>
				<key>scriptargtype</key>
				<integer>1</integer>
				<key>scriptfile</key>
				<string></string>
				<key>subtext</key>
				<string>Type something to autcomplete or space to list vaults</string>
				<key>title</key>
				<string>Clear one vault</string>
				<key>type</key>
				<integer>7</integer>
				<key>withspace</key>
				<false/>
			</dict>
			<key>type</key>
			<string>alfred.workflow.input.scriptfilter</string>
			<key>uid</key>
			<string>0F2ED3A2-F821-40B0-9915-C8E5E2D84A02</string>
			<key>version</key>
			<integer>3</integer>
		</dict>
	</array>
	<key>readme</key>
	<string>A workflow to open Obsidian vaults, daily note, and search for notes in vaults. Tested in Obsidian 0.10.2.

===

RELEASE NOTES

Full documentation: https://github.com/hauselin/obsidian-alfred

v0.2.3
- Accepts MMM and MMMM datetime format.
- Clear a single vault with oclearvault

v0.2.2
- Opens markdown files in your default editor if os/or/ot finds/tries to open a file that's not in your Obsidian vault.

v0.2.1
- Added otmr to create/open daily note for tomorrow.
- os, or, ot no longer requires an extra step to list matching markdown files, but they will now list matching markdown files found *anywhere* and not just inside your vaults; if you want to search only within your vaults, use oss, orr, or ott instead.

v0.2.0
- Major and breaking changes.
- Now requires a one-off initial setup to tell the workflow where/what you vaults are etc. Uses workflow environment variables, so your settings will be saved whenever you update/upgrade this workflow to a newer version.
- Set up: oaddvault, odailyvault, odailyformat, odailypath, odailytemplate, oclearvaults
- No longer requires users to manually edit any osascripts or settings within the workflow.
- Fixes the issue of settings not preserving whenever you upgrade to a newer version of this workflow.
- Create new note in vault with keyword on.

v0.1.5
- Add fallback search.
- Daily note keyword (od) can create a new daily note that doesn't exist yet (optional feature). See step 3 in osascript.

v0.1.4
- Fix bug with daily note (od).

v0.1.3
- Now supports paths with special characters (thanks to @hjklapp).
- Uses JXA actions/scripts instead of bash scripts (thanks to @hjklapp).

v0.1.2
- new keywords: oo

v0.1.1
- new keywords: ov, od, os, or, ot

## Known bugs

If the Obsidian app isn't already opened, this workflow will always open the last recently opened vault. This bug is a known issue with Electron apps on MacOS.</string>
	<key>uidata</key>
	<dict>
		<key>0796CFDE-8B84-4EAD-A82D-6558AF6C4D42</key>
		<dict>
			<key>note</key>
			<string>Open Obsidian vault.</string>
			<key>xpos</key>
			<integer>350</integer>
			<key>ypos</key>
			<integer>110</integer>
		</dict>
		<key>08A7509B-BDA4-455E-A628-38ABF42C04D7</key>
		<dict>
			<key>xpos</key>
			<integer>765</integer>
			<key>ypos</key>
			<integer>45</integer>
		</dict>
		<key>0F2ED3A2-F821-40B0-9915-C8E5E2D84A02</key>
		<dict>
			<key>note</key>
			<string>Set up: Clear a selected vault.</string>
			<key>xpos</key>
			<integer>150</integer>
			<key>ypos</key>
			<integer>1525</integer>
		</dict>
		<key>1BD03BB0-06B9-47F5-9346-7A829C38B248</key>
		<dict>
			<key>note</key>
			<string>Invoked when you search for a keyword that doesn't match a result on your local.</string>
			<key>xpos</key>
			<integer>125</integer>
			<key>ypos</key>
			<integer>380</integer>
		</dict>
		<key>249B0782-BFFB-4382-A857-5058D7C3D244</key>
		<dict>
			<key>note</key>
			<string>Define scope based on vaults.</string>
			<key>xpos</key>
			<integer>840</integer>
			<key>ypos</key>
			<integer>930</integer>
		</dict>
		<key>2754DF89-417E-46D0-A435-3ED58F2CB8CF</key>
		<dict>
			<key>xpos</key>
			<integer>320</integer>
			<key>ypos</key>
			<integer>1355</integer>
		</dict>
		<key>29B3A4DB-80CD-498F-A079-18F1CA7DD20C</key>
		<dict>
			<key>note</key>
			<string>Edit subtext to remind yourself of your vault names.</string>
			<key>xpos</key>
			<integer>170</integer>
			<key>ypos</key>
			<integer>50</integer>
		</dict>
		<key>2CC3DBA2-EDA4-4548-A215-611A436E43DB</key>
		<dict>
			<key>note</key>
			<string>os. Change settings here.</string>
			<key>xpos</key>
			<integer>1030</integer>
			<key>ypos</key>
			<integer>605</integer>
		</dict>
		<key>2EEFE48E-B0E2-406A-BCA9-930F5969A364</key>
		<dict>
			<key>colorindex</key>
			<integer>2</integer>
			<key>note</key>
			<string>Store vault name in variable. Default title can be changed here.</string>
			<key>xpos</key>
			<integer>985</integer>
			<key>ypos</key>
			<integer>395</integer>
		</dict>
		<key>353B5FD9-BF6A-4635-9AA1-313E16E86B05</key>
		<dict>
			<key>note</key>
			<string>Obsidian help</string>
			<key>xpos</key>
			<integer>595</integer>
			<key>ypos</key>
			<integer>95</integer>
		</dict>
		<key>360748C4-EF05-4FC2-8AB9-E4A969D2D256</key>
		<dict>
			<key>xpos</key>
			<integer>1545</integer>
			<key>ypos</key>
			<integer>100</integer>
		</dict>
		<key>3BD1A5BF-C96B-4C33-B2A6-2EEB18C41B62</key>
		<dict>
			<key>colorindex</key>
			<integer>6</integer>
			<key>note</key>
			<string>Store file name/title in variable.</string>
			<key>xpos</key>
			<integer>1245</integer>
			<key>ypos</key>
			<integer>395</integer>
		</dict>
		<key>3CF13837-2DBB-46AA-93B4-6CA9598A106E</key>
		<dict>
			<key>note</key>
			<string>Open note in Obsidian.</string>
			<key>xpos</key>
			<integer>1330</integer>
			<key>ypos</key>
			<integer>365</integer>
		</dict>
		<key>3DF54CDE-9D13-4486-B7EC-7921A46C8AE2</key>
		<dict>
			<key>note</key>
			<string>Define hotkey to search in vaults.</string>
			<key>xpos</key>
			<integer>635</integer>
			<key>ypos</key>
			<integer>1350</integer>
		</dict>
		<key>3E2AE83C-BAFA-4EB9-ADCB-0BB7989CF9E9</key>
		<dict>
			<key>xpos</key>
			<integer>1185</integer>
			<key>ypos</key>
			<integer>100</integer>
		</dict>
		<key>3F7FA866-52E3-46A9-84EE-80A4D3244647</key>
		<dict>
			<key>note</key>
			<string>Set up: Add a vault.</string>
			<key>xpos</key>
			<integer>145</integer>
			<key>ypos</key>
			<integer>585</integer>
		</dict>
		<key>403F9FD9-33F0-42FC-8E20-FEC2C821B083</key>
		<dict>
			<key>note</key>
			<string>Search for recent files (default: last 3 days)</string>
			<key>xpos</key>
			<integer>645</integer>
			<key>ypos</key>
			<integer>860</integer>
		</dict>
		<key>44D69DBA-085D-4208-86A1-CED1CA068AB3</key>
		<dict>
			<key>note</key>
			<string>Search for all files.</string>
			<key>xpos</key>
			<integer>640</integer>
			<key>ypos</key>
			<integer>570</integer>
		</dict>
		<key>46732892-62E0-47CE-B727-EBA967105197</key>
		<dict>
			<key>note</key>
			<string>Define scope based on vaults.</string>
			<key>xpos</key>
			<integer>840</integer>
			<key>ypos</key>
			<integer>605</integer>
		</dict>
		<key>54B8D923-3C08-4CD2-8F05-0AF628F5C029</key>
		<dict>
			<key>xpos</key>
			<integer>165</integer>
			<key>ypos</key>
			<integer>210</integer>
		</dict>
		<key>5ADBB309-EC74-453A-B7F5-9E34E2CDB7E3</key>
		<dict>
			<key>note</key>
			<string>or. Change settings here.</string>
			<key>xpos</key>
			<integer>1025</integer>
			<key>ypos</key>
			<integer>930</integer>
		</dict>
		<key>5DE0CED7-F7E2-4A3F-B3A2-53FF23C8C6D3</key>
		<dict>
			<key>note</key>
			<string>Set up: Specify daily note format.</string>
			<key>xpos</key>
			<integer>155</integer>
			<key>ypos</key>
			<integer>890</integer>
		</dict>
		<key>67E25071-1FF8-4F8B-9A9F-2509093593B6</key>
		<dict>
			<key>note</key>
			<string>Clear vault.</string>
			<key>xpos</key>
			<integer>325</integer>
			<key>ypos</key>
			<integer>1520</integer>
		</dict>
		<key>6F34BFA1-14F5-49E9-B25D-417D71A29AD4</key>
		<dict>
			<key>colorindex</key>
			<integer>2</integer>
			<key>note</key>
			<string>Store vault name in variable.</string>
			<key>xpos</key>
			<integer>545</integer>
			<key>ypos</key>
			<integer>405</integer>
		</dict>
		<key>6FF78F6F-9167-45D0-B022-7BE55106848C</key>
		<dict>
			<key>note</key>
			<string>Define scope based on vaults.</string>
			<key>xpos</key>
			<integer>815</integer>
			<key>ypos</key>
			<integer>1230</integer>
		</dict>
		<key>70AEEB77-35DB-44B9-B633-BE1D2B43D581</key>
		<dict>
			<key>note</key>
			<string>Open note in Obsidian.</string>
			<key>xpos</key>
			<integer>1275</integer>
			<key>ypos</key>
			<integer>925</integer>
		</dict>
		<key>72CFFBA4-02FC-4875-BB2C-562FCF5E43BC</key>
		<dict>
			<key>xpos</key>
			<integer>325</integer>
			<key>ypos</key>
			<integer>1200</integer>
		</dict>
		<key>76C3031F-7B85-45C6-9D05-DF5802BBC167</key>
		<dict>
			<key>note</key>
			<string>Daily note.</string>
			<key>xpos</key>
			<integer>985</integer>
			<key>ypos</key>
			<integer>170</integer>
		</dict>
		<key>834BB1A9-B643-4448-97B4-B6B6582602CB</key>
		<dict>
			<key>note</key>
			<string>Set up: Clear all but help vault.</string>
			<key>xpos</key>
			<integer>150</integer>
			<key>ypos</key>
			<integer>1355</integer>
		</dict>
		<key>854EB1EE-9017-4F43-BC80-BAF317FC5315</key>
		<dict>
			<key>note</key>
			<string>Vault to create new note in.</string>
			<key>xpos</key>
			<integer>825</integer>
			<key>ypos</key>
			<integer>365</integer>
		</dict>
		<key>86967BF2-99A7-43FB-A22A-7AC2F9A8C34C</key>
		<dict>
			<key>colorindex</key>
			<integer>6</integer>
			<key>note</key>
			<string>Store search query in variable.</string>
			<key>xpos</key>
			<integer>300</integer>
			<key>ypos</key>
			<integer>410</integer>
		</dict>
		<key>8B221971-0089-4DAC-A056-EC2C961C6EAB</key>
		<dict>
			<key>note</key>
			<string>Title of new note.</string>
			<key>xpos</key>
			<integer>1075</integer>
			<key>ypos</key>
			<integer>365</integer>
		</dict>
		<key>8C017EEF-38DD-4148-9291-9302EFCE33DE</key>
		<dict>
			<key>note</key>
			<string>Set up: Specify daily note directory/path.</string>
			<key>xpos</key>
			<integer>155</integer>
			<key>ypos</key>
			<integer>1200</integer>
		</dict>
		<key>9295060C-B513-4806-8F12-52EC6D30C9A3</key>
		<dict>
			<key>note</key>
			<string>Define hotkey to search in vaults.</string>
			<key>xpos</key>
			<integer>640</integer>
			<key>ypos</key>
			<integer>700</integer>
		</dict>
		<key>9F656256-DD01-4508-BF9F-CDB3168DB9B6</key>
		<dict>
			<key>xpos</key>
			<integer>765</integer>
			<key>ypos</key>
			<integer>180</integer>
		</dict>
		<key>A70B656D-CA4C-41F9-99E3-988FB6158F5F</key>
		<dict>
			<key>xpos</key>
			<integer>325</integer>
			<key>ypos</key>
			<integer>585</integer>
		</dict>
		<key>ADAB8847-A309-4A02-9D42-E8D30C47BC5D</key>
		<dict>
			<key>note</key>
			<string>Set up: Specify daily note vault.</string>
			<key>xpos</key>
			<integer>150</integer>
			<key>ypos</key>
			<integer>735</integer>
		</dict>
		<key>B768A804-C61E-4133-AB9C-74C6448BFC62</key>
		<dict>
			<key>note</key>
			<string>Open/create today's daily note.</string>
			<key>xpos</key>
			<integer>980</integer>
			<key>ypos</key>
			<integer>10</integer>
		</dict>
		<key>C016E20E-3F44-4372-90DC-1B00DA8C07F8</key>
		<dict>
			<key>note</key>
			<string>ot. Change settings here.</string>
			<key>xpos</key>
			<integer>1020</integer>
			<key>ypos</key>
			<integer>1230</integer>
		</dict>
		<key>CD6980A3-E50D-4689-B8D6-1A677CDE1914</key>
		<dict>
			<key>xpos</key>
			<integer>390</integer>
			<key>ypos</key>
			<integer>380</integer>
		</dict>
		<key>CEC4065E-BADA-44B7-A255-4A9D613685E2</key>
		<dict>
			<key>note</key>
			<string>Define hotkey to search in vaults.</string>
			<key>xpos</key>
			<integer>645</integer>
			<key>ypos</key>
			<integer>1010</integer>
		</dict>
		<key>D79944EC-E799-4CC4-9961-A6EBF5D6FBDC</key>
		<dict>
			<key>xpos</key>
			<integer>325</integer>
			<key>ypos</key>
			<integer>890</integer>
		</dict>
		<key>DE762236-EFCC-45D3-85CA-A1B6B191762C</key>
		<dict>
			<key>note</key>
			<string>Open search pane in Obsidian vault.</string>
			<key>xpos</key>
			<integer>625</integer>
			<key>ypos</key>
			<integer>375</integer>
		</dict>
		<key>E6955BE2-FEB7-470D-92BE-03EDF6C498FB</key>
		<dict>
			<key>xpos</key>
			<integer>325</integer>
			<key>ypos</key>
			<integer>735</integer>
		</dict>
		<key>F118473C-D1EF-472F-A1F6-CC9A8C65ABF2</key>
		<dict>
			<key>note</key>
			<string>Open/create tomorrow's daily note.</string>
			<key>xpos</key>
			<integer>1365</integer>
			<key>ypos</key>
			<integer>100</integer>
		</dict>
		<key>F565051F-71D8-42F7-A733-5DA9F39AAEA2</key>
		<dict>
			<key>note</key>
			<string>Set up: Specify daily note template.</string>
			<key>xpos</key>
			<integer>155</integer>
			<key>ypos</key>
			<integer>1050</integer>
		</dict>
		<key>F8C5232B-3EDC-4388-851E-BFE6602C88D0</key>
		<dict>
			<key>xpos</key>
			<integer>325</integer>
			<key>ypos</key>
			<integer>1050</integer>
		</dict>
		<key>FFD4328D-FE08-4222-8AA1-FD71A1DC33F9</key>
		<dict>
			<key>note</key>
			<string>Search for files modified today</string>
			<key>xpos</key>
			<integer>640</integer>
			<key>ypos</key>
			<integer>1185</integer>
		</dict>
	</dict>
	<key>variables</key>
	<dict>
		<key>dailyabspath</key>
		<string>/Users/josephdespres/Documents/Start/journal</string>
		<key>dailyformat</key>
		<string>yyyy-mm-dd</string>
		<key>dailyheader</key>
		<string></string>
		<key>dailytempabspath</key>
		<string></string>
		<key>dailytodaypath</key>
		<string>/Users/josephdespres/Documents/Start/journal/2021-01-28.md</string>
		<key>dailyvault</key>
		<string>/Users/josephdespres/Documents/Start</string>
		<key>dailyvaultname</key>
		<string>Start</string>
		<key>vault1</key>
		<string>obsidian help</string>
		<key>vault1name</key>
		<string>obsidian help</string>
		<key>vault2</key>
		<string>/Users/josephdespres/Documents/Start</string>
		<key>vault2name</key>
		<string>Start</string>
		<key>vault3</key>
		<string></string>
		<key>vault3name</key>
		<string></string>
	</dict>
	<key>variablesdontexport</key>
	<array>
		<string>vault2</string>
		<string>vault3</string>
		<string>vault3name</string>
		<string>dailyheader</string>
		<string>dailytempabspath</string>
		<string>dailytodaypath</string>
		<string>dailyabspath</string>
		<string>dailyvault</string>
		<string>vault2name</string>
		<string>dailyformat</string>
		<string>dailyvaultname</string>
	</array>
	<key>version</key>
	<string>0.2.3</string>
	<key>webaddress</key>
	<string>https://github.com/hauselin/obsidian-alfred</string>
</dict>
</plist>
